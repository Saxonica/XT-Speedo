<?xml version="1.0" encoding="UTF-8"?>
<xquery-tokens xmlns:xs="http://www.w3.org/2001/XMLSchema"
               xmlns:xqf="urn:xq.internal-function"
               xmlns:f="internal">
   <pre xmlns="http://www.w3.org/1999/xhtml">
      <span class="comment">(:&#xD;
 : Copyright (c)2006 Elsevier, Inc.&#xD;
 :&#xD;
 : Licensed under the Apache License, Version 2.0 (the "License");&#xD;
 : you may not use this file except in compliance with the License.&#xD;
 : You may obtain a copy of the License at&#xD;
 :&#xD;
 : http://www.apache.org/licenses/LICENSE-2.0&#xD;
 :&#xD;
 : Unless required by applicable law or agreed to in writing, software&#xD;
 : distributed under the License is distributed on an "AS IS" BASIS,&#xD;
 : WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xD;
 : See the License for the specific language governing permissions and&#xD;
 : limitations under the License.&#xD;
 :&#xD;
 : The use of the Apache License does not indicate that this project is&#xD;
 : affiliated with the Apache Software Foundation.&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~ &#xD;
 :  This module provides the functions that control the Web presentation&#xD;
 :  of xqDoc. The logic contained in this module is not specific to any&#xD;
 :  XQuery implementation and is written to the Nov 2005 XQuery working&#xD;
 :  draft specification.  &#xD;
 :&#xD;
 :  It should also be noted that these functions not only support the &#xD;
 :  real-time presentation of the xqDoc information but are also used&#xD;
 :  for the static offline presentation mode as well.  The static offline&#xD;
 :  presentation mode has advantages because access to a native XML &#xD;
 :  database is not needed when viewing the xqDoc information ... it is&#xD;
 :  only needed when generating the offline materials. &#xD;
 : &#xD;
 :  @author Darin McBeath&#xD;
 :  @since June 9, 2006&#xD;
 :  @version 1.3&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="op">module</span>
      <span class="whitespace"> </span>
      <span class="axis">namespace</span>
      <span class="whitespace"> </span>
      <span class="qname">display</span>
      <span class="op">=</span>
      <span class="op">"</span>
      <span class="literal">xqdoc/xqdoc-display</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="whitespace">declare namespace</span>
      <span class="whitespace"> </span>
      <span class="qname">xq</span>
      <span class="op">=</span>
      <span class="op">"</span>
      <span class="literal">http://www.xqdoc.org/1.0</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~ &#xD;
 :  This variable defines the name for the xqDoc collection.&#xD;
 :  The xqDoc XML for all modules should be stored into the&#xD;
 :  XML database with this collection value.&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare variable</span>
      <span class="whitespace"> </span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">xqdoc</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">;</span>
      <span class="whitespace"> &#xD;
&#xD;
</span>
      <span class="comment">(:~ &#xD;
 :  This variable contains the list of URIs for all of the modules&#xD;
 :  available to xqDoc for presentation.  Each module should be identified by&#xD;
 :  a unique URI in the XML databse. &#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare variable</span>
      <span class="whitespace"> </span>
      <span class="variable">$display:XQDOC_URIS</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string*</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="whitespace">&#xD;
                                                      </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> &#xD;
                                                      </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="function">fn:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$x</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
</span>
      <span class="comment">(:~ &#xD;
 :  Construct the welcome banner for the xqDoc home page.&#xD;
 :&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic linke for real-time viewing.&#xD;
 :  @return HTML.&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-intro</span>
      <span class="parenthesis">(</span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">+</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">h3</span>
      <span class="z">&gt;</span>
      <span class="txt">Welcome to xqDoc</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h3</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">overview</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
  </span>
      <span class="es">&lt;</span>
      <span class="en">p</span>
      <span class="z">&gt;</span>
      <span class="txt">This site presents documentation and cross-referencing information for both XQuery library&#xD;
  and main modules that have been converted into xqDoc XML.   &#xD;
  Visit </span>
      <span class="es">&lt;</span>
      <span class="en">a</span>
      <span class="atn"> href</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">http://www.xqdoc.org</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">xqdoc.org</span>
      <span class="sc">&lt;/</span>
      <span class="cl">a</span>
      <span class="z">&gt;</span>
      <span class="txt"> to find the latest developments for this XQuery&#xD;
  open source tool.</span>
      <span class="sc">&lt;/</span>
      <span class="cl">p</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
  </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
  </span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the welcome banner for the xqDoc module page.&#xD;
 :&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML.&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-module-intro</span>
      <span class="parenthesis">(</span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">default</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the list of modules available to xqDoc for presentation.&#xD;
 :  The list of modules is availalbe on the xqDoc home page.&#xD;
 :&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML.&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-modules</span>
      <span class="parenthesis">(</span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">+</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">home</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
    </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
    </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="filter">[</span>
      <span class="axis">@</span>
      <span class="qname">type</span>
      <span class="op">=</span>
      <span class="op">"</span>
      <span class="literal">library</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">h4</span>
      <span class="z">&gt;</span>
      <span class="txt">Library Modules</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h4</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">br</span>
      <span class="z">/&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="es">&lt;</span>
      <span class="en">br</span>
      <span class="z">/&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="axis">@</span>
      <span class="qname">type</span>
      <span class="op">=</span>
      <span class="op">"</span>
      <span class="literal">library</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="filter">]</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="parenthesis">(</span>
      <span class="whitespace"> </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                              </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                              </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$x</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                               </span>
      <span class="function">display:decode-uri</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$x</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="es">&lt;</span>
      <span class="en">br</span>
      <span class="z">/&gt;</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="parenthesis">)</span>
      <span class="whitespace">           &#xD;
    </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
    </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
    </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="filter">[</span>
      <span class="axis">@</span>
      <span class="qname">type</span>
      <span class="op">=</span>
      <span class="op">"</span>
      <span class="literal">main</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">h4</span>
      <span class="z">&gt;</span>
      <span class="txt">Main Modules</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h4</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">br</span>
      <span class="z">/&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="es">&lt;</span>
      <span class="en">br</span>
      <span class="z">/&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="axis">@</span>
      <span class="qname">type</span>
      <span class="op">=</span>
      <span class="op">"</span>
      <span class="literal">main</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="filter">]</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="parenthesis">(</span>
      <span class="whitespace"> </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                               </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                               </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$x</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                </span>
      <span class="function">display:decode-uri</span>
      <span class="parenthesis">(</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$x</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="es">&lt;</span>
      <span class="en">br</span>
      <span class="z">/&gt;</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
    </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  The controller for constructing the xqDoc HTML information for&#xD;
 :  the specified module. The following information  for&#xD;
 :  each module will be generated.&#xD;
 :  &lt;ul&gt;&#xD;
 :  &lt;li&gt; Module introductory information&lt;/li&gt;&#xD;
 :  &lt;li&gt; Global variables declared in this module&lt;/li&gt;&#xD;
 :  &lt;li&gt; Modules imported by this module&lt;/li&gt;&#xD;
 :  &lt;li&gt; Summary information for each function defined in the module&lt;/li&gt;&#xD;
 :  &lt;li&gt; Detailed information for each function defined in the module&lt;/li&gt;&#xD;
 :  &lt;/ul&gt;&#xD;
 :&#xD;
 :  @param $uri the URI for the module&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML.&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-module-control</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type">item</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">+</span>
      <span class="whitespace"> &#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="parenthesis">(</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-module</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="function">display:print-variables</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="function">display:print-imports</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="function">display:print-method-summary</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="function">display:print-method-detail</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="function">display:print-footer</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the high-level xqDoc HTML for the module.&#xD;
 :  This is essentially any introductory xqDoc comments that might&#xD;
 :  be associated with the module.&#xD;
 :&#xD;
 :  @param $uri the URI for the module&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML.&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-module</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace"> &#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
   </span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">h4</span>
      <span class="z">&gt;</span>
      <span class="txt">Module URI</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h4</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="es">&lt;</span>
      <span class="en">h1</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="whitespace"> </span>
      <span class="function">display:decode-uri</span>
      <span class="parenthesis">(</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="filter">[</span>
      <span class="context">.</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h1</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:body</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-code</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                           </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                           </span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                           </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
              </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:description</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">or</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:author</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">or</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:version</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">or</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:since</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">or</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:see</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">h4</span>
      <span class="z">&gt;</span>
      <span class="txt">Module Description</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h4</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="function">display:print-comment</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:description</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="es">&lt;</span>
      <span class="en">ul</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
              </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
              </span>
      <span class="parenthesis">(</span>
      <span class="function">display:print-comment</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:author</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">Author:</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
              </span>
      <span class="function">display:print-comment</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:version</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">Version:</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
              </span>
      <span class="function">display:print-comment</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:since</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">Since:</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
              </span>
      <span class="function">display:print-comment</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:see</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">See:</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
              </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
            </span>
      <span class="sc">&lt;/</span>
      <span class="cl">ul</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
   </span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the high-level xqDoc HTML for any global variables&#xD;
 :  declared in the module.  In addition, cross-reference&#xD;
 :  links will be included for the following:&#xD;
 :  &lt;ul&gt;&#xD;
 :  &lt;li&gt;Functions (contained in this module) that &lt;i&gt;use&lt;/i&gt; this variable&lt;/li&gt;&#xD;
 :  &lt;li&gt;Functions (not contained in this module) that &lt;i&gt;use&lt;/i&gt; this variable&lt;/li&gt;&#xD;
 :  &lt;/ul&gt;&#xD;
 :  @param $uri the URI for the module&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML.&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-variables</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace"> &#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:variables</span>
      <span class="step">/</span>
      <span class="qname">xq:variable</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">h4</span>
      <span class="z">&gt;</span>
      <span class="txt">Variables</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h4</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
       </span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="atn"> id</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">variables</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
            </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$v</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:variables</span>
      <span class="step">/</span>
      <span class="qname">xq:variable</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="op">return</span>
      <span class="whitespace"> &#xD;
                </span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">a</span>
      <span class="atn"> name</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace"> </span>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">$</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$v</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">/&gt;</span>
      <span class="txt">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">ul</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">method</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                   </span>
      <span class="es">&lt;</span>
      <span class="en">li</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace"> </span>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">$</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$v</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">li</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                   </span>
      <span class="es">&lt;</span>
      <span class="en">li</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">right</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="whitespace"> </span>
      <span class="variable">$v</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:description</span>
      <span class="step">/</span>
      <span class="node-type">node</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">li</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">ul</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">ul</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                 </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace"> </span>
      <span class="function">display:print-comment</span>
      <span class="parenthesis">(</span>
      <span class="variable">$v</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:since</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">Since:</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace"> </span>
      <span class="function">display:print-comment</span>
      <span class="parenthesis">(</span>
      <span class="variable">$v</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:see</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">See:</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">ul</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                 </span>
      <span class="op">{</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-internal-variable-references</span>
      <span class="parenthesis">(</span>
      <span class="variable">$v</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="op">{</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-external-variable-references</span>
      <span class="parenthesis">(</span>
      <span class="variable">$v</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="op">}</span>
      <span class="txt">       &#xD;
       </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the high-level xqDoc HTML for any modules&#xD;
 :  imported by the module.  &#xD;
 :&#xD;
 :  @param $uri the URI for the module&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML.&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-imports</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace"> &#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:imports</span>
      <span class="step">/</span>
      <span class="qname">xq:import</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">h4</span>
      <span class="z">&gt;</span>
      <span class="txt">Imported Modules</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h4</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="atn"> id</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">imports</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
          </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
            </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$v</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:imports</span>
      <span class="step">/</span>
      <span class="qname">xq:import</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="op">return</span>
      <span class="whitespace"> &#xD;
              </span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
               </span>
      <span class="es">&lt;</span>
      <span class="en">ul</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">method</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
               </span>
      <span class="es">&lt;</span>
      <span class="en">li</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
               </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$v</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                    </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                    </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$v</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                    </span>
      <span class="function">display:decode-uri</span>
      <span class="parenthesis">(</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$v</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="function">display:decode-uri</span>
      <span class="parenthesis">(</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$v</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> &#xD;
               </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
               </span>
      <span class="sc">&lt;/</span>
      <span class="cl">li</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
               </span>
      <span class="es">&lt;</span>
      <span class="en">li</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">right</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt"> </span>
      <span class="op">{</span>
      <span class="variable">$v</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:description</span>
      <span class="step">/</span>
      <span class="node-type">node</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">li</span>
      <span class="z">&gt;</span>
      <span class="txt">           &#xD;
               </span>
      <span class="sc">&lt;/</span>
      <span class="cl">ul</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
               </span>
      <span class="es">&lt;</span>
      <span class="en">ul</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
               </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace"> </span>
      <span class="function">display:print-comment</span>
      <span class="parenthesis">(</span>
      <span class="variable">$v</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:since</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">Since:</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
               </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace"> </span>
      <span class="function">display:print-comment</span>
      <span class="parenthesis">(</span>
      <span class="variable">$v</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:see</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">See:</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
               </span>
      <span class="sc">&lt;/</span>
      <span class="cl">ul</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
              </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
        </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the xqDoc HTML method summary for each function defined&#xD;
 :  in the module.  The method summary will contain the function&#xD;
 :  signature and the first &lt;i&gt;sentence&lt;/i&gt; of any xqDoc comments associated&#xD;
 :  with the function.&#xD;
 :&#xD;
 :  @param $uri the URI for the module&#xD;
 :  @return HTML.&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-method-summary</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace"> &#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">h4</span>
      <span class="z">&gt;</span>
      <span class="txt">Function Summary</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h4</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="atn"> id</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">methods</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt"> &#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">a</span>
      <span class="atn"> name</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">methods</span>
      <span class="z">"</span>
      <span class="z">/&gt;</span>
      <span class="txt">  &#xD;
        </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
         </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$f</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="function">fn:normalize-space</span>
      <span class="parenthesis">(</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">ascending</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="es">&lt;</span>
      <span class="en">ul</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">method</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
              </span>
      <span class="es">&lt;</span>
      <span class="en">li</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
               </span>
      <span class="es">&lt;</span>
      <span class="en">a</span>
      <span class="atn"> href</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">'</span>
      <span class="literal">#</span>
      <span class="op">'</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">fn:normalize-space</span>
      <span class="parenthesis">(</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">fn:normalize-space</span>
      <span class="parenthesis">(</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">a</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
               </span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">description</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
               </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
                 </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:description</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace"> &#xD;
                    </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:substring-before</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:description</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">.</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                      </span>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:substring-before</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:description</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">.</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">.</span>
      <span class="op">"</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                    </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                      </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:description</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                    </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
               </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
              </span>
      <span class="sc">&lt;/</span>
      <span class="cl">li</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
              </span>
      <span class="es">&lt;</span>
      <span class="en">li</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">right</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
               </span>
      <span class="op">{</span>
      <span class="function">display:print-signature</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:signature</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">fn:true</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="txt">&#xD;
              </span>
      <span class="sc">&lt;/</span>
      <span class="cl">li</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
            </span>
      <span class="sc">&lt;/</span>
      <span class="cl">ul</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
          </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
    </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the xqDoc HTML method detail for each function defined&#xD;
 :  in the module.  The method detail will contain the function&#xD;
 :  signature and all xqDoc comments associated with the function.  In&#xD;
 :  addition, cross-reference links will be included for the following:&#xD;
 :  &lt;ul&gt;&#xD;
 :  &lt;li&gt;Functions (contained in this module) that &lt;i&gt;are used&lt;/i&gt; by this function&lt;/li&gt;&#xD;
 :  &lt;li&gt;Functions (not contained in this module) that &lt;i&gt;are used&lt;/i&gt; by this function&lt;/li&gt;&#xD;
 :  &lt;li&gt;Functions (contained in this module) that &lt;i&gt;use&lt;/i&gt; this function&lt;/li&gt;&#xD;
 :  &lt;li&gt;Functions (not contained in this module) that &lt;i&gt;use&lt;/i&gt; this function&lt;/li&gt;&#xD;
 :  &lt;li&gt;Variables (contained in this module) that &lt;i&gt;are used&lt;/i&gt; by this function&lt;/li&gt;&#xD;
 :  &lt;li&gt;Variables (not contained in this module) that &lt;i&gt;are used&lt;/i&gt; by this function&lt;/li&gt;&#xD;
 :  &lt;/ul&gt;&#xD;
 :&#xD;
 :  @param $uri the URI for the module&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML.&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-method-detail</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type">item</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace"> &#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">h4</span>
      <span class="z">&gt;</span>
      <span class="txt">Function Detail</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h4</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="atn"> id</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">methoddetail</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
      </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$f</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="function">fn:normalize-space</span>
      <span class="parenthesis">(</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">ascending</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="atn"> id</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="function">fn:normalize-space</span>
      <span class="parenthesis">(</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">methoddetail</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
         </span>
      <span class="es">&lt;</span>
      <span class="en">h5</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">a</span>
      <span class="atn"> name</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="function">fn:normalize-space</span>
      <span class="parenthesis">(</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">/&gt;</span>
      <span class="op">{</span>
      <span class="function">fn:normalize-space</span>
      <span class="parenthesis">(</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h5</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
         </span>
      <span class="es">&lt;</span>
      <span class="en">ul</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">method</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
           </span>
      <span class="es">&lt;</span>
      <span class="en">li</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
           </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
             </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:body</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
&#xD;
              </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-code</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                 </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                 </span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="function">fn:normalize-space</span>
      <span class="parenthesis">(</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                 </span>
      <span class="function">fn:normalize-space</span>
      <span class="parenthesis">(</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
              </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
           </span>
      <span class="sc">&lt;/</span>
      <span class="cl">li</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
           </span>
      <span class="es">&lt;</span>
      <span class="en">li</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">right</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">     &#xD;
              </span>
      <span class="op">{</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-signature</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:signature</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">fn:false</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
           </span>
      <span class="sc">&lt;/</span>
      <span class="cl">li</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
         </span>
      <span class="sc">&lt;/</span>
      <span class="cl">ul</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
	   </span>
      <span class="op">{</span>
      <span class="function">display:print-detail-comment</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:description</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="txt">&#xD;
         </span>
      <span class="es">&lt;</span>
      <span class="en">ul</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
         </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
           </span>
      <span class="parenthesis">(</span>
      <span class="function">display:print-detail-comment</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:param</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">Parameters:</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="function">display:print-detail-comment</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:return</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">Return:</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="function">display:print-detail-comment</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:error</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">Errors:</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="function">display:print-detail-comment</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:since</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">Since:</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="function">display:print-detail-comment</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:see</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">See:</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="function">display:print-detail-comment</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="step">/</span>
      <span class="qname">xq:comment</span>
      <span class="step">/</span>
      <span class="qname">xq:deprecated</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">Deprecated:</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
         </span>
      <span class="sc">&lt;/</span>
      <span class="cl">ul</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
         </span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="function">display:print-external-functions-invoked</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">   &#xD;
         </span>
      <span class="function">display:print-external-functions-invoked-by</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">      &#xD;
         </span>
      <span class="function">display:print-internal-functions-invoked</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">    &#xD;
         </span>
      <span class="function">display:print-internal-functions-invoked-by</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">  &#xD;
         </span>
      <span class="function">display:print-internal-variables-referenced</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="function">display:print-external-variables-referenced</span>
      <span class="parenthesis">(</span>
      <span class="variable">$f</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
         </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">  </span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
    </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">    &#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the xqDoc HTML for the function signature.&#xD;
 :&#xD;
 :  @param $sigs the signatures associated with the current function.  Although only one&#xD;
 :               signature is allowed for user-defined functions, more than one signature&#xD;
 :               is required to support other 'modules' such as XPath F &amp;amp; O.&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return String containing the marked up function signature.&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-signature</span>
      <span class="parenthesis">(</span>
      <span class="variable">$sigs</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string*</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type">item</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$sig</span>
      <span class="whitespace"> </span>
      <span class="op">at</span>
      <span class="whitespace"> </span>
      <span class="variable">$cnt</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$sigs</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="parenthesis">(</span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$params</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="function">fn:substring-after</span>
      <span class="parenthesis">(</span>
      <span class="variable">$sig</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">(</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
   </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$tokens</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="function">fn:tokenize</span>
      <span class="parenthesis">(</span>
      <span class="variable">$params</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">,</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
   </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$count</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="function">fn:count</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tokens</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
   </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
     </span>
      <span class="parenthesis">(</span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$cnt</span>
      <span class="whitespace"> </span>
      <span class="op">&gt;</span>
      <span class="whitespace"> </span>
      <span class="numeric">1</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace"> &#xD;
	  </span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">OR</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="es">&lt;</span>
      <span class="en">br</span>
      <span class="z">/&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="es">&lt;</span>
      <span class="en">br</span>
      <span class="z">/&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$token</span>
      <span class="whitespace"> </span>
      <span class="op">at</span>
      <span class="whitespace"> </span>
      <span class="variable">$index</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$tokens</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="parenthesis">(</span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$index</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="numeric">1</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
          </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">(</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
          </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$index</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="numeric">1</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
	    </span>
      <span class="function">fn:normalize-space</span>
      <span class="parenthesis">(</span>
      <span class="variable">$token</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
          </span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">fn:normalize-space</span>
      <span class="parenthesis">(</span>
      <span class="variable">$token</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$index</span>
      <span class="whitespace"> </span>
      <span class="op">&lt;</span>
      <span class="whitespace"> </span>
      <span class="variable">$count</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
          </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">,</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
          </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">br</span>
      <span class="z">/&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
  </span>
      <span class="es">&lt;</span>
      <span class="en">br</span>
      <span class="z">/&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the xqDoc HTML for the specified xqDoc comment.  The following&#xD;
 :  xqDoc comment values are supported.&#xD;
 :  &lt;ul&gt;&#xD;
 :  &lt;li&gt;author&lt;/li&gt;&#xD;
 :  &lt;li&gt;version&lt;/li&gt;&#xD;
 :  &lt;li&gt;param&lt;/li&gt;&#xD;
 :  &lt;li&gt;return&lt;/li&gt;&#xD;
 :  &lt;li&gt;error&lt;/li&gt;&#xD;
 :  &lt;li&gt;deprecated&lt;/li&gt;&#xD;
 :  &lt;li&gt;see&lt;/li&gt;&#xD;
 :  &lt;li&gt;since&lt;/li&gt;&#xD;
 :  &lt;li&gt;&lt;i&gt;empty&lt;/i&gt; which indicates a &lt;i&gt;description&lt;/i&gt;&lt;/li&gt;&#xD;
 :  &lt;/ul&gt;&#xD;
 :&#xD;
 :  @param $comment the xqDoc comment element associated with a function&#xD;
 :  @param $name the xqDoc comment name to process (i.e. author, version, etc.)&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-comment</span>
      <span class="parenthesis">(</span>
      <span class="variable">$comment</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="quantifier">?</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace"> &#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="variable">$comment</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
     </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$comment</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="op">return</span>
      <span class="whitespace">           &#xD;
             </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:not</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace"> &#xD;
               </span>
      <span class="es">&lt;</span>
      <span class="en">p</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="variable">$i</span>
      <span class="step">/</span>
      <span class="node-type">node</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">p</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">     &#xD;
             </span>
      <span class="op">else</span>
      <span class="whitespace"> </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">See:</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
               </span>
      <span class="es">&lt;</span>
      <span class="en">li</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">strong</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="variable">$name</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">strong</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">display:print-comment-see</span>
      <span class="parenthesis">(</span>
      <span class="variable">$i</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">li</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
               </span>
      <span class="es">&lt;</span>
      <span class="en">li</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">strong</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="variable">$name</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">strong</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="variable">$i</span>
      <span class="step">/</span>
      <span class="node-type">node</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">li</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
  </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the &lt;i&gt;detailed&lt;/i&gt; xqDoc HTML for the specified xqDoc comment.  &#xD;
 :  Detailed essentially implies the xqDoc comments for the method detail. The following&#xD;
 :  xqDoc comment values are supported.&#xD;
 :  &lt;ul&gt;&#xD;
 :  &lt;li&gt;author&lt;/li&gt;&#xD;
 :  &lt;li&gt;version&lt;/li&gt;&#xD;
 :  &lt;li&gt;param&lt;/li&gt;&#xD;
 :  &lt;li&gt;return&lt;/li&gt;&#xD;
 :  &lt;li&gt;error&lt;/li&gt;&#xD;
 :  &lt;li&gt;deprecated&lt;/li&gt;&#xD;
 :  &lt;li&gt;see&lt;/li&gt;&#xD;
 :  &lt;li&gt;since&lt;/li&gt;&#xD;
 :  &lt;li&gt;&lt;i&gt;empty&lt;/i&gt; which indicates a &lt;i&gt;description&lt;/i&gt;&lt;/li&gt;&#xD;
 :  &lt;/ul&gt;&#xD;
 :&#xD;
 :  @param $comment the xqDoc comment element associated with a function&#xD;
 :  @param $name the xqDoc comment name to process (i.e. author, version, etc.)&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-detail-comment</span>
      <span class="parenthesis">(</span>
      <span class="variable">$comment</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="quantifier">?</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="variable">$comment</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">       &#xD;
      </span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">li</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="variable">$name</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">li</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="es">&lt;</span>
      <span class="en">ul</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
          </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
            </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$comment</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
              </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">Parameters:</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                </span>
      <span class="es">&lt;</span>
      <span class="en">li</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">display:print-comment-param</span>
      <span class="parenthesis">(</span>
      <span class="variable">$i</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">li</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">             &#xD;
              </span>
      <span class="op">else</span>
      <span class="whitespace"> </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">See:</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                </span>
      <span class="es">&lt;</span>
      <span class="en">li</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">display:print-comment-see</span>
      <span class="parenthesis">(</span>
      <span class="variable">$i</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">li</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
              </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                </span>
      <span class="es">&lt;</span>
      <span class="en">li</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="variable">$i</span>
      <span class="step">/</span>
      <span class="node-type">node</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">li</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
          </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
      </span>
      <span class="sc">&lt;/</span>
      <span class="cl">ul</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace"> &#xD;
    </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="es">&lt;</span>
      <span class="en">p</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="variable">$comment</span>
      <span class="step">/</span>
      <span class="node-type">node</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">p</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace"> &#xD;
  </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">  &#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the xqDoc HTML for the specified xqDoc &lt;i&gt;param&lt;/i&gt; comment element.  &#xD;
 :&#xD;
 :  @param $entry the xqDoc &lt;i&gt;param&lt;/i&gt; comment element associated with a function&#xD;
 :  @return HTML&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-comment-param</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type">item</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace"> &#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$tmp</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="node-type">node</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="filter">[</span>
      <span class="numeric">1</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$bef</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace">  </span>
      <span class="function">fn:substring-before</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:normalize-space</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tmp</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal"> </span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$aft</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace">  </span>
      <span class="function">fn:substring-after</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:normalize-space</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tmp</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal"> </span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="parenthesis">(</span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:string-length</span>
      <span class="parenthesis">(</span>
      <span class="variable">$bef</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">&gt;</span>
      <span class="whitespace"> </span>
      <span class="numeric">0</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
		</span>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="variable">$bef</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal"> - </span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$aft</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
	  </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
		</span>
      <span class="variable">$tmp</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
	  </span>
      <span class="parenthesis">(</span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace"> </span>
      <span class="op">at</span>
      <span class="whitespace"> </span>
      <span class="variable">$y</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="node-type">node</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="whitespace"> </span>
      <span class="op">&gt;</span>
      <span class="whitespace"> </span>
      <span class="numeric">1</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
               </span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal"> </span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal"> </span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
               </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="es">&lt;</span>
      <span class="en">br</span>
      <span class="z">/&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the xqDoc HTML for the specified xqDoc &lt;i&gt;see&lt;/i&gt; comment element. &#xD;
 :  If the comment is a URI that exists for a module contained within&#xD;
 :  xqDoc, build a link to this module (and optionally method or variable&#xD;
 :  name.  If the comment is a 'http://' URL, then build a link to the URL.  If the&#xD;
 :  comment is simply text, return the text.  With version 1.1, it is now also&#xD;
 :  possible to specify the visible display name for the link.  This is accomplished&#xD;
 :  by specifying an option second semi-colon followed by the link name.  So, the&#xD;
 :  format for the parameter would be as follows:&#xD;
 :  &lt;p/&gt;&#xD;
 :&#xD;
 :    a mandatory uri (or text) ';' an optional variable or method name ';' an optional link name&#xD;
 :&#xD;
 :  @param $entry the xqDoc param comment element associated with a function&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-comment-see</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type">item</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace"> &#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$tmp</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="function">fn:normalize-space</span>
      <span class="parenthesis">(</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$tokens</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="function">fn:tokenize</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tmp</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">;</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
&#xD;
  </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:count</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tokens</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="numeric">1</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
&#xD;
    </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:not</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:contains</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tokens</span>
      <span class="op">,</span>
      <span class="op">"</span>
      <span class="literal">#</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$tokens</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
&#xD;
        </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                           </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                           </span>
      <span class="variable">$tokens</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                           </span>
      <span class="variable">$tmp</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
&#xD;
    </span>
      <span class="op">else</span>
      <span class="whitespace"> </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:starts-with</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tokens</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">http</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">a</span>
      <span class="atn"> href</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="variable">$tokens</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="variable">$tokens</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">a</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
&#xD;
    </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
&#xD;
        </span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="node-type">node</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
&#xD;
  </span>
      <span class="op">else</span>
      <span class="whitespace"> </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:count</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tokens</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="numeric">2</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
&#xD;
    </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:not</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:contains</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tokens</span>
      <span class="filter">[</span>
      <span class="numeric">1</span>
      <span class="filter">]</span>
      <span class="op">,</span>
      <span class="op">"</span>
      <span class="literal">#</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$tokens</span>
      <span class="filter">[</span>
      <span class="numeric">1</span>
      <span class="filter">]</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="filter">[</span>
      <span class="qname">xq:name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="function">fn:normalize-space</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tokens</span>
      <span class="filter">[</span>
      <span class="numeric">2</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
&#xD;
        </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                           </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                           </span>
      <span class="variable">$tokens</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                           </span>
      <span class="variable">$tmp</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
&#xD;
    </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
&#xD;
      </span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="node-type">node</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
&#xD;
  </span>
      <span class="op">else</span>
      <span class="whitespace"> </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:count</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tokens</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="numeric">3</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
&#xD;
    </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:string-length</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tokens</span>
      <span class="filter">[</span>
      <span class="numeric">2</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="numeric">0</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="function">fn:not</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:contains</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tokens</span>
      <span class="filter">[</span>
      <span class="numeric">1</span>
      <span class="filter">]</span>
      <span class="op">,</span>
      <span class="op">"</span>
      <span class="literal">#</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$tokens</span>
      <span class="filter">[</span>
      <span class="numeric">1</span>
      <span class="filter">]</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
&#xD;
        </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                           </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                           </span>
      <span class="variable">$tokens</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                           </span>
      <span class="variable">$tokens</span>
      <span class="filter">[</span>
      <span class="numeric">3</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
&#xD;
    </span>
      <span class="op">else</span>
      <span class="whitespace"> </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:string-length</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tokens</span>
      <span class="filter">[</span>
      <span class="numeric">2</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="numeric">0</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="function">fn:starts-with</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tokens</span>
      <span class="filter">[</span>
      <span class="numeric">1</span>
      <span class="filter">]</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">http</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">a</span>
      <span class="atn"> href</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="variable">$tokens</span>
      <span class="filter">[</span>
      <span class="numeric">1</span>
      <span class="filter">]</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="variable">$tokens</span>
      <span class="filter">[</span>
      <span class="numeric">3</span>
      <span class="filter">]</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">a</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
&#xD;
    </span>
      <span class="op">else</span>
      <span class="whitespace"> </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:string-length</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tokens</span>
      <span class="filter">[</span>
      <span class="numeric">2</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">&gt;</span>
      <span class="whitespace"> </span>
      <span class="numeric">0</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="function">fn:not</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:contains</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tokens</span>
      <span class="filter">[</span>
      <span class="numeric">1</span>
      <span class="filter">]</span>
      <span class="op">,</span>
      <span class="op">"</span>
      <span class="literal">#</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$tokens</span>
      <span class="filter">[</span>
      <span class="numeric">1</span>
      <span class="filter">]</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="filter">[</span>
      <span class="qname">xq:name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="function">fn:normalize-space</span>
      <span class="parenthesis">(</span>
      <span class="variable">$tokens</span>
      <span class="filter">[</span>
      <span class="numeric">2</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
&#xD;
        </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                           </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                           </span>
      <span class="variable">$tokens</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                           </span>
      <span class="variable">$tokens</span>
      <span class="filter">[</span>
      <span class="numeric">3</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
&#xD;
    </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
&#xD;
      </span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="node-type">node</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
&#xD;
  </span>
      <span class="op">else</span>
      <span class="whitespace"> &#xD;
&#xD;
    </span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="node-type">node</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the information to identify those functions (contained in&#xD;
 :  other modules) that are &lt;i&gt;used by&lt;/i&gt; the current function.  If that &#xD;
 :  module exists in xqDoc, construct a link to the module and function.&#xD;
 :  If that module does not exist in xqDoc, simply identify the &#xD;
 :  module and function name.&#xD;
 :&#xD;
 :  @param $function the current function&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-external-functions-invoked</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="step">/</span>
      <span class="qname">xq:invoked</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">!=</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="parenthesis">)</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">methoddetail</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">h6</span>
      <span class="z">&gt;</span>
      <span class="txt">External Functions that are used by this Function</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h6</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">table</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">inexternal</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">th</span>
      <span class="atn"> align</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">Module URI</span>
      <span class="sc">&lt;/</span>
      <span class="cl">th</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">th</span>
      <span class="atn"> align</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">Function Name</span>
      <span class="sc">&lt;/</span>
      <span class="cl">th</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
       </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$uris</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="function">fn:distinct-values</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="step">/</span>
      <span class="qname">xq:invoked</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                    </span>
      <span class="op">where</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace"> </span>
      <span class="op">!=</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                    </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$x</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                    </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$x</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$uris</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$names</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$y</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$function</span>
      <span class="step">/</span>
      <span class="qname">xq:invoked</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="op">=</span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="whitespace"> </span>
      <span class="op">at</span>
      <span class="whitespace"> </span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$names</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="numeric">1</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
		</span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="atn"> rowspan</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="function">fn:count</span>
      <span class="parenthesis">(</span>
      <span class="variable">$names</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">display:decode-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="filter">[</span>
      <span class="qname">xq:name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                     </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
                       </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                          </span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="variable">$name</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
           </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="filter">[</span>
      <span class="qname">xq:name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                     </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
                       </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                          </span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">}</span>
      <span class="txt">                   &#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="variable">$name</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
           </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
    </span>
      <span class="sc">&lt;/</span>
      <span class="cl">table</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
   </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
&#xD;
  </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the information to identify those functions (contained in&#xD;
 :  other modules) that &lt;i&gt;use&lt;/i&gt; the current function.  If that &#xD;
 :  module exists in xqDoc, construct a link to the module and function.&#xD;
 :  If that module does not exist in xqDoc, simply identify the &#xD;
 :  module and function name.&#xD;
 :&#xD;
 :  @param $function the current function&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-external-functions-invoked-by</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="step">/</span>
      <span class="qname">xq:invoked</span>
      <span class="filter">[</span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="context">.</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">!=</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="qname">xq:uri</span>
      <span class="op">=</span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="qname">xq:name</span>
      <span class="op">=</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">methoddetail</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">h6</span>
      <span class="z">&gt;</span>
      <span class="txt">External Functions that invoke this Function</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h6</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">table</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">inexternal</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">th</span>
      <span class="atn"> align</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">Module URI</span>
      <span class="sc">&lt;/</span>
      <span class="cl">th</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">th</span>
      <span class="atn"> align</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">Function Name</span>
      <span class="sc">&lt;/</span>
      <span class="cl">th</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$list</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="step">/</span>
      <span class="qname">xq:invoked</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="op">=</span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="qname">xq:name</span>
      <span class="op">=</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="filter">]</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$uris</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="function">fn:distinct-values</span>
      <span class="parenthesis">(</span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$y</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$list</span>
      <span class="whitespace">&#xD;
                                     </span>
      <span class="op">where</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">!=</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                                     </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                                     </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
                                       </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$uris</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$entries</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$list</span>
      <span class="whitespace">&#xD;
                        </span>
      <span class="op">where</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="parenthesis">)</span>
      <span class="op">=</span>
      <span class="variable">$uri</span>
      <span class="whitespace">&#xD;
                        </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="whitespace">&#xD;
                        </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="whitespace"> </span>
      <span class="op">at</span>
      <span class="whitespace"> </span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$entries</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="op">return</span>
      <span class="whitespace"> &#xD;
           </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="numeric">1</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
		</span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="atn"> rowspan</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="function">fn:count</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entries</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">display:decode-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="filter">[</span>
      <span class="qname">xq:name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                     </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
                       </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                          </span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
            </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="filter">[</span>
      <span class="qname">xq:name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                     </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
                       </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                          </span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
            </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="op">}</span>
      <span class="txt">	  &#xD;
        </span>
      <span class="sc">&lt;/</span>
      <span class="cl">table</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
   </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the information to identify those functions (contained in the module&#xD;
 :  for the current function) that are &lt;i&gt;used by&lt;/i&gt; the current function.  &#xD;
 :  Construct a link to the module and function.&#xD;
 :&#xD;
 :  @param $function the current function&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-internal-functions-invoked</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="step">/</span>
      <span class="qname">xq:invoked</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="parenthesis">)</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">methoddetail</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">h6</span>
      <span class="z">&gt;</span>
      <span class="txt">Internal Functions used by this Function</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h6</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">table</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">inexternal</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">th</span>
      <span class="atn"> align</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">Module URI</span>
      <span class="sc">&lt;/</span>
      <span class="cl">th</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">th</span>
      <span class="atn"> align</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">Function Name</span>
      <span class="sc">&lt;/</span>
      <span class="cl">th</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
      </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
       </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$uris</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="function">fn:distinct-values</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="step">/</span>
      <span class="qname">xq:invoked</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                    </span>
      <span class="op">where</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                    </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$x</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                    </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$x</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$uris</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$names</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$y</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$function</span>
      <span class="step">/</span>
      <span class="qname">xq:invoked</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="op">=</span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="whitespace"> </span>
      <span class="op">at</span>
      <span class="whitespace"> </span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$names</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="numeric">1</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
		</span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="atn"> rowspan</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="function">fn:count</span>
      <span class="parenthesis">(</span>
      <span class="variable">$names</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">display:decode-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="filter">[</span>
      <span class="qname">xq:name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                     </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
                       </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                          </span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="variable">$name</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
           </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="filter">[</span>
      <span class="qname">xq:name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                     </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
                       </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                          </span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="variable">$name</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
           </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
    </span>
      <span class="sc">&lt;/</span>
      <span class="cl">table</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
   </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
&#xD;
  </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the information to identify those functions (contained in the module&#xD;
 :  for the current function) that &lt;i&gt;use&lt;/i&gt; the current function.  &#xD;
 :  Construct a link to the module and function.&#xD;
 :&#xD;
 :  @param $function the current function&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-internal-functions-invoked-by</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="step">/</span>
      <span class="qname">xq:invoked</span>
      <span class="filter">[</span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="context">.</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="qname">xq:uri</span>
      <span class="op">=</span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="qname">xq:name</span>
      <span class="op">=</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">methoddetail</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">h6</span>
      <span class="z">&gt;</span>
      <span class="txt">Internal Functions that invoke this Function</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h6</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">table</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">inexternal</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">th</span>
      <span class="atn"> align</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">Module URI</span>
      <span class="sc">&lt;/</span>
      <span class="cl">th</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">th</span>
      <span class="atn"> align</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">Function Name</span>
      <span class="sc">&lt;/</span>
      <span class="cl">th</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$list</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="step">/</span>
      <span class="qname">xq:invoked</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="op">=</span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="qname">xq:name</span>
      <span class="op">=</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="filter">]</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$uris</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="function">fn:distinct-values</span>
      <span class="parenthesis">(</span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$y</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$list</span>
      <span class="whitespace">&#xD;
                                     </span>
      <span class="op">where</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                                     </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                                     </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
                                       </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$uris</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$entries</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$list</span>
      <span class="whitespace">&#xD;
                        </span>
      <span class="op">where</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="parenthesis">)</span>
      <span class="op">=</span>
      <span class="variable">$uri</span>
      <span class="whitespace">&#xD;
                        </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="whitespace">&#xD;
                        </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="whitespace"> </span>
      <span class="op">at</span>
      <span class="whitespace"> </span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$entries</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="op">return</span>
      <span class="whitespace"> &#xD;
           </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="numeric">1</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
		</span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="atn"> rowspan</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="function">fn:count</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entries</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">display:decode-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="filter">[</span>
      <span class="qname">xq:name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                     </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
                       </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                          </span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
            </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="filter">[</span>
      <span class="qname">xq:name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                     </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
                       </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                          </span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
            </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
        </span>
      <span class="sc">&lt;/</span>
      <span class="cl">table</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
   </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the information to identify those functions (defined in other modules&#xD;
 :  from the current variable) that &lt;i&gt;used&lt;/i&gt; the current variable.  If that &#xD;
 :  module exists in xqDoc, construct a link to the module and function.&#xD;
 :  If that module does not exist in xqDoc, simply identify the &#xD;
 :  module and function name.&#xD;
 :&#xD;
 :  @param $variable the current variable&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-external-variable-references</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="step">/</span>
      <span class="qname">xq:ref-variable</span>
      <span class="filter">[</span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="context">.</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">!=</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="qname">xq:uri</span>
      <span class="op">=</span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="qname">xq:name</span>
      <span class="op">=</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">methoddetail</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">h6</span>
      <span class="z">&gt;</span>
      <span class="txt">External Functions that reference this Variable</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h6</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">table</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">inexternal</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">th</span>
      <span class="atn"> align</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">Module URI</span>
      <span class="sc">&lt;/</span>
      <span class="cl">th</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">th</span>
      <span class="atn"> align</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">Function Name</span>
      <span class="sc">&lt;/</span>
      <span class="cl">th</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$list</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="step">/</span>
      <span class="qname">xq:ref-variable</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="op">=</span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="qname">xq:name</span>
      <span class="op">=</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="filter">]</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$uris</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="function">fn:distinct-values</span>
      <span class="parenthesis">(</span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$y</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$list</span>
      <span class="whitespace">&#xD;
                                     </span>
      <span class="op">where</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">!=</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                                     </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                                     </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
                                       </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$uris</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$entries</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$list</span>
      <span class="whitespace">&#xD;
                        </span>
      <span class="op">where</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="parenthesis">)</span>
      <span class="op">=</span>
      <span class="variable">$uri</span>
      <span class="whitespace">&#xD;
                        </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="whitespace">&#xD;
                        </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="whitespace"> </span>
      <span class="op">at</span>
      <span class="whitespace"> </span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$entries</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="op">return</span>
      <span class="whitespace"> &#xD;
           </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="numeric">1</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
		</span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="atn"> rowspan</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="function">fn:count</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entries</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">display:decode-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="filter">[</span>
      <span class="qname">xq:name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                     </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
                       </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                          </span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
            </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="filter">[</span>
      <span class="qname">xq:name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                     </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
                       </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                          </span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
            </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
        </span>
      <span class="sc">&lt;/</span>
      <span class="cl">table</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
   </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the information to identify those functions (defined in the module&#xD;
 :  for the current variable) that &lt;i&gt;use&lt;/i&gt; the current variable.  &#xD;
 :  Construct a link to the module and function.&#xD;
 :&#xD;
 :  @param $variable the current variable&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-internal-variable-references</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="step">/</span>
      <span class="qname">xq:ref-variable</span>
      <span class="filter">[</span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="context">.</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="qname">xq:uri</span>
      <span class="op">=</span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="qname">xq:name</span>
      <span class="op">=</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">methoddetail</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">h6</span>
      <span class="z">&gt;</span>
      <span class="txt">Internal Functions that reference this Variable</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h6</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">table</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">inexternal</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">th</span>
      <span class="atn"> align</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">Module URI</span>
      <span class="sc">&lt;/</span>
      <span class="cl">th</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">th</span>
      <span class="atn"> align</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">Function Name</span>
      <span class="sc">&lt;/</span>
      <span class="cl">th</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$list</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="step">/</span>
      <span class="qname">xq:ref-variable</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="op">=</span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">and</span>
      <span class="whitespace"> </span>
      <span class="qname">xq:name</span>
      <span class="op">=</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="filter">]</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$uris</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="function">fn:distinct-values</span>
      <span class="parenthesis">(</span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$y</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$list</span>
      <span class="whitespace">&#xD;
                                     </span>
      <span class="op">where</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                                     </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                                     </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
                                       </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$uris</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$entries</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$list</span>
      <span class="whitespace">&#xD;
                        </span>
      <span class="op">where</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="parenthesis">)</span>
      <span class="op">=</span>
      <span class="variable">$uri</span>
      <span class="whitespace">&#xD;
                        </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="whitespace">&#xD;
                        </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="whitespace"> </span>
      <span class="op">at</span>
      <span class="whitespace"> </span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$entries</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="op">return</span>
      <span class="whitespace"> &#xD;
           </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="numeric">1</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
		</span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="atn"> rowspan</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="function">fn:count</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entries</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">display:decode-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="filter">[</span>
      <span class="qname">xq:name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                     </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
                       </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                          </span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
            </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="filter">[</span>
      <span class="qname">xq:name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                     </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
                       </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                          </span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$entry</span>
      <span class="step">/</span>
      <span class="context">..</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
            </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
        </span>
      <span class="sc">&lt;/</span>
      <span class="cl">table</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
   </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the information to identify those functions (defined in other modules&#xD;
 :  from the current variable) that &lt;i&gt;use&lt;/i&gt; the current variable.  If that &#xD;
 :  module exists in xqDoc, construct a link to the module and function.&#xD;
 :  If that module does not exist in xqDoc, simply identify the &#xD;
 :  module and function name.&#xD;
 :&#xD;
 :  @param $variable the current variable&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-external-variables-referenced</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="step">/</span>
      <span class="qname">xq:ref-variable</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">!=</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="parenthesis">)</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">methoddetail</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">h6</span>
      <span class="z">&gt;</span>
      <span class="txt">External Variables used by this Function</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h6</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">table</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">inexternal</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">th</span>
      <span class="atn"> align</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">Module URI</span>
      <span class="sc">&lt;/</span>
      <span class="cl">th</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">th</span>
      <span class="atn"> align</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">Variable Name</span>
      <span class="sc">&lt;/</span>
      <span class="cl">th</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
      </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
       </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$uris</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="function">fn:distinct-values</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="step">/</span>
      <span class="qname">xq:ref-variable</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                    </span>
      <span class="op">where</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace"> </span>
      <span class="op">!=</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                    </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$x</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                    </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$x</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$uris</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$names</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$y</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$variable</span>
      <span class="step">/</span>
      <span class="qname">xq:ref-variable</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="op">=</span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="whitespace"> </span>
      <span class="op">at</span>
      <span class="whitespace"> </span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$names</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="numeric">1</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
		</span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="atn"> rowspan</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="function">fn:count</span>
      <span class="parenthesis">(</span>
      <span class="variable">$names</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">display:decode-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:variables</span>
      <span class="step">/</span>
      <span class="qname">xq:variable</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                     </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
                       </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                          </span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">$</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">$</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">$</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
           </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:variables</span>
      <span class="step">/</span>
      <span class="qname">xq:variable</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                     </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
                       </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                          </span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">$</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">$</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">$</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
           </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
    </span>
      <span class="sc">&lt;/</span>
      <span class="cl">table</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
   </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
&#xD;
  </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the information to identify those functions (defined in the module&#xD;
 :  for the current variable) that &lt;i&gt;use&lt;/i&gt; the current variable.  &#xD;
 :  Construct a link to the module and function.&#xD;
 :&#xD;
 :  @param $variable the current variable&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-internal-variables-referenced</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="step">/</span>
      <span class="qname">xq:ref-variable</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="parenthesis">)</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">methoddetail</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">h6</span>
      <span class="z">&gt;</span>
      <span class="txt">Internal Variables used by this Function</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h6</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">table</span>
      <span class="atn"> class</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">inexternal</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">th</span>
      <span class="atn"> align</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">Module URI</span>
      <span class="sc">&lt;/</span>
      <span class="cl">th</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">th</span>
      <span class="atn"> align</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">Variable Name</span>
      <span class="sc">&lt;/</span>
      <span class="cl">th</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
       </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
      </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
       </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$uris</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="function">fn:distinct-values</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="step">/</span>
      <span class="qname">xq:ref-variable</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                    </span>
      <span class="op">where</span>
      <span class="whitespace"> </span>
      <span class="variable">$x</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$variable</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                    </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$x</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                    </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$x</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$uris</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$names</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$y</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$variable</span>
      <span class="step">/</span>
      <span class="qname">xq:ref-variable</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="op">=</span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="whitespace">order by</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$y</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="whitespace"> </span>
      <span class="op">at</span>
      <span class="whitespace"> </span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="variable">$names</span>
      <span class="whitespace">&#xD;
       </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="numeric">1</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
		</span>
      <span class="parenthesis">(</span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="op">"</span>
      <span class="literal">&amp;#160;</span>
      <span class="op">"</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
            </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="atn"> rowspan</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="function">fn:count</span>
      <span class="parenthesis">(</span>
      <span class="variable">$names</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="function">display:decode-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:variables</span>
      <span class="step">/</span>
      <span class="qname">xq:variable</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                     </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
                       </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                          </span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">$</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">$</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">$</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
           </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="es">&lt;</span>
      <span class="en">tr</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
             </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:variables</span>
      <span class="step">/</span>
      <span class="qname">xq:variable</span>
      <span class="filter">[</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
                     </span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
                       </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="variable">$local</span>
      <span class="op">,</span>
      <span class="whitespace"> &#xD;
                                          </span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">$</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
                                          </span>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">$</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
                     </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
                 </span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
               </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
                 </span>
      <span class="es">&lt;</span>
      <span class="en">td</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">$</span>
      <span class="op">"</span>
      <span class="op">,</span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">td</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
             </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
           </span>
      <span class="sc">&lt;/</span>
      <span class="cl">tr</span>
      <span class="z">&gt;</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
    </span>
      <span class="sc">&lt;/</span>
      <span class="cl">table</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
   </span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
&#xD;
  </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 : Decode the uri.  This routine is needed for some XML databases that&#xD;
 : have problems with specific characters contained in a document URI.&#xD;
 : This routine makes the URI more human readable ... by removing the&#xD;
 : encoding.  Currently, the only character encoded is a "/".  Other&#xD;
 : characters could easily be added.  However, they would also need to&#xD;
 : be specified in the xqDoc conversion package (XQDocContext).&#xD;
 :&#xD;
 : @param $uri the string to be decoded&#xD;
 : @return the decoded string&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:decode-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="function">fn:replace</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">~2F</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">/</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 : Find the module uri for the associated element.  This routine is needed &#xD;
 : since we can't rely soley on base-uri().  Instead, the xqDoc XML URI is&#xD;
 : contained in the XML of the document (the xqDoc module section).&#xD;
 :&#xD;
 : @param $e the element (i.e. function or variable) that we want to find the module uri&#xD;
 : @return the module URI associated with the element&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:module-uri</span>
      <span class="parenthesis">(</span>
      <span class="variable">$e</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$e</span>
      <span class="step">/</span>
      <span class="axis">ancestor::</span>
      <span class="qname">xq:xqdoc</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the fotter information for the current module.&#xD;
 :  The footer will contain the version of the xqDoc conversion program&#xD;
 :  used to generate the xqDoc XML stored in the XML database and the&#xD;
 :  time when the XML was created.  If the xqDoc conversion program was not&#xD;
 :  used (i.e. XPath F &amp;amp; O) then this information will be marked as N/A.&#xD;
 :&#xD;
 :  @param $uri the current module uri&#xD;
 :  @return HTML&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-footer</span>
      <span class="parenthesis">(</span>
      <span class="variable">$uri</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="es">&lt;</span>
      <span class="en">div</span>
      <span class="atn"> align</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">left</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
     </span>
      <span class="es">&lt;</span>
      <span class="en">i</span>
      <span class="z">&gt;</span>
      <span class="txt">Created by xqDoc version </span>
      <span class="op">{</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:control</span>
      <span class="step">/</span>
      <span class="qname">xq:version</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="txt"> on </span>
      <span class="op">{</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$uri</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:control</span>
      <span class="step">/</span>
      <span class="qname">xq:date</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="sc">&lt;/</span>
      <span class="cl">i</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
</span>
      <span class="sc">&lt;/</span>
      <span class="cl">div</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the HTML for the xqDoc home page.  This will include the welcome&#xD;
 :  text and the list of modules available in xqDoc.&#xD;
 :&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:get-default-html</span>
      <span class="parenthesis">(</span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="es">&lt;</span>
      <span class="en">html</span>
      <span class="atn"> xml:space</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">preserve</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
    </span>
      <span class="es">&lt;</span>
      <span class="en">head</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
      </span>
      <span class="es">&lt;</span>
      <span class="en">title</span>
      <span class="z">&gt;</span>
      <span class="txt">xqDoc -- Module List</span>
      <span class="sc">&lt;/</span>
      <span class="cl">title</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
      </span>
      <span class="op">{</span>
      <span class="whitespace"> </span>
      <span class="function">display:get-stylesheet</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
    </span>
      <span class="sc">&lt;/</span>
      <span class="cl">head</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
    </span>
      <span class="es">&lt;</span>
      <span class="en">body</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
    </span>
      <span class="op">{</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-intro</span>
      <span class="parenthesis">(</span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
    </span>
      <span class="op">{</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-modules</span>
      <span class="parenthesis">(</span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
    </span>
      <span class="sc">&lt;/</span>
      <span class="cl">body</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
  </span>
      <span class="sc">&lt;/</span>
      <span class="cl">html</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the HTML for a xqDoc module page.  &#xD;
 :&#xD;
 :  @param $module the module uri&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:get-module-html</span>
      <span class="parenthesis">(</span>
      <span class="variable">$module</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="es">&lt;</span>
      <span class="en">html</span>
      <span class="atn"> xml:space</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">preserve</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
    </span>
      <span class="es">&lt;</span>
      <span class="en">head</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
      </span>
      <span class="es">&lt;</span>
      <span class="en">title</span>
      <span class="z">&gt;</span>
      <span class="txt">xqDoc -- Module</span>
      <span class="sc">&lt;/</span>
      <span class="cl">title</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
      </span>
      <span class="es">&lt;</span>
      <span class="en">script</span>
      <span class="atn"> language</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">JavaScript</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
      </span>
      <span class="z">&lt;!--</span>
      <span class="cm">&#xD;
        function popUp(URL) {&#xD;
                 day = new Date();&#xD;
                 id = day.getTime();&#xD;
                 eval("page = window.open(URL, 'xqdoccode', 'toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=1,width=600,height=400,left = 412,top = 334');")&#xD;
                 page.focus();&#xD;
        }&#xD;
      </span>
      <span class="z">--&gt;</span>
      <span class="txt">&#xD;
      </span>
      <span class="sc">&lt;/</span>
      <span class="cl">script</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
      </span>
      <span class="op">{</span>
      <span class="whitespace"> </span>
      <span class="function">display:get-stylesheet</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
    </span>
      <span class="sc">&lt;/</span>
      <span class="cl">head</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
    </span>
      <span class="es">&lt;</span>
      <span class="en">body</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
    </span>
      <span class="op">{</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-module-intro</span>
      <span class="parenthesis">(</span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
    </span>
      <span class="op">{</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-module-control</span>
      <span class="parenthesis">(</span>
      <span class="variable">$module</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
    </span>
      <span class="sc">&lt;/</span>
      <span class="cl">body</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
  </span>
      <span class="sc">&lt;/</span>
      <span class="cl">html</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct a link.  Based on the parameters, the link will be built&#xD;
 :  for the static (off-line viewing mode of xqDoc) or the dynamic viewing&#xD;
 :  mode of xqDoc.   The parameters will also indicate which link to construct,&#xD;
 :  supply the appropriate paramters for the link, and assign a name for the link.&#xD;
 :&#xD;
 :  @param $type the type of link to construct.  The link can be for the xqDoc home&#xD;
 :               page, the module page for a particular module, or for the&#xD;
 :               XQuery code for a specific function.&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @param $parms the parameters associated with the link &lt;i&gt;$type&lt;/i&gt;&#xD;
 :  @param $name the name to assign for the link&#xD;
 :  @return HTML&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:build-link</span>
      <span class="parenthesis">(</span>
      <span class="variable">$type</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$parms</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string*</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="quantifier">?</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">?</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$type</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">default</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
&#xD;
    </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="function">fn:true</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="es">&lt;</span>
      <span class="en">a</span>
      <span class="atn"> href</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">default.html</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
         </span>
      <span class="es">&lt;</span>
      <span class="en">h1</span>
      <span class="z">&gt;</span>
      <span class="txt">xqDoc Home</span>
      <span class="sc">&lt;/</span>
      <span class="cl">h1</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
      </span>
      <span class="sc">&lt;/</span>
      <span class="cl">a</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
&#xD;
    </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="es">&lt;</span>
      <span class="en">a</span>
      <span class="atn"> href</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">default.xqy</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
         xqDoc Home&#xD;
      </span>
      <span class="sc">&lt;/</span>
      <span class="cl">a</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
&#xD;
  </span>
      <span class="op">else</span>
      <span class="whitespace"> </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$type</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">get-module</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
&#xD;
    </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="function">fn:true</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="es">&lt;</span>
      <span class="en">a</span>
      <span class="atn"> href</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">'</span>
      <span class="literal">xqdoc-file-</span>
      <span class="op">'</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:index-of</span>
      <span class="parenthesis">(</span>
      <span class="function">display:get-module-uris</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$parms</span>
      <span class="filter">[</span>
      <span class="numeric">1</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">'</span>
      <span class="literal">.html</span>
      <span class="op">'</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="variable">$parms</span>
      <span class="filter">[</span>
      <span class="numeric">2</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">'</span>
      <span class="literal">#</span>
      <span class="op">'</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$parms</span>
      <span class="filter">[</span>
      <span class="numeric">2</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="op">{</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
      </span>
      <span class="sc">&lt;/</span>
      <span class="cl">a</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
&#xD;
    </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="es">&lt;</span>
      <span class="en">a</span>
      <span class="atn"> href</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">'</span>
      <span class="literal">get-module.xqy?module=</span>
      <span class="op">'</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$parms</span>
      <span class="filter">[</span>
      <span class="numeric">1</span>
      <span class="filter">]</span>
      <span class="op">,</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="variable">$parms</span>
      <span class="filter">[</span>
      <span class="numeric">2</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">'</span>
      <span class="literal">#</span>
      <span class="op">'</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$parms</span>
      <span class="filter">[</span>
      <span class="numeric">2</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
           </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
         </span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
        </span>
      <span class="op">{</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="whitespace"> </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
      </span>
      <span class="sc">&lt;/</span>
      <span class="cl">a</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
&#xD;
&#xD;
  </span>
      <span class="op">else</span>
      <span class="whitespace"> </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$type</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">get-code</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
&#xD;
    </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="function">fn:true</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
	</span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:count</span>
      <span class="parenthesis">(</span>
      <span class="variable">$parms</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">&gt;</span>
      <span class="whitespace"> </span>
      <span class="numeric">1</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">a</span>
      <span class="atn"> href</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">javascript:popUp('xqdoc-file-</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:index-of</span>
      <span class="parenthesis">(</span>
      <span class="function">display:get-module-uris</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$parms</span>
      <span class="filter">[</span>
      <span class="numeric">1</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">-</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$parms</span>
      <span class="filter">[</span>
      <span class="numeric">2</span>
      <span class="filter">]</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">.html')</span>
      <span class="op">"</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
          view code&#xD;
        </span>
      <span class="sc">&lt;/</span>
      <span class="cl">a</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
      </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">a</span>
      <span class="atn"> href</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">javascript:popUp('xqdoc-file-</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="function">fn:index-of</span>
      <span class="parenthesis">(</span>
      <span class="function">display:get-module-uris</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$parms</span>
      <span class="filter">[</span>
      <span class="numeric">1</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">_source.html')</span>
      <span class="op">"</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
          view code&#xD;
        </span>
      <span class="sc">&lt;/</span>
      <span class="cl">a</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
&#xD;
    </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:count</span>
      <span class="parenthesis">(</span>
      <span class="variable">$parms</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">&gt;</span>
      <span class="whitespace"> </span>
      <span class="numeric">1</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">a</span>
      <span class="atn"> href</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">javascript:popUp('get-code.xqy?module=</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$parms</span>
      <span class="filter">[</span>
      <span class="numeric">1</span>
      <span class="filter">]</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">&amp;#38;</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">function=</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$parms</span>
      <span class="filter">[</span>
      <span class="numeric">2</span>
      <span class="filter">]</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">')</span>
      <span class="op">"</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
          view code&#xD;
        </span>
      <span class="sc">&lt;/</span>
      <span class="cl">a</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
      </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="es">&lt;</span>
      <span class="en">a</span>
      <span class="atn"> href</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="op">{</span>
      <span class="open"/>
      <span class="function">fn:concat</span>
      <span class="parenthesis">(</span>
      <span class="op">"</span>
      <span class="literal">javascript:popUp('get-code.xqy?module=</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$parms</span>
      <span class="filter">[</span>
      <span class="numeric">1</span>
      <span class="filter">]</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">')</span>
      <span class="op">"</span>
      <span class="parenthesis">)</span>
      <span class="op">}</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
          view code&#xD;
        </span>
      <span class="sc">&lt;/</span>
      <span class="cl">a</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
  </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct a list of module uris contained in xqDoc.&#xD;
 :&#xD;
 :  @return List of module uris contained in xqDoc&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:get-module-uris</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string*</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="variable">$display:XQDOC_URIS</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct a list of function names defined in the current module.&#xD;
 :&#xD;
 :  @param $module the uri for the current module&#xD;
 :  @return List of function names defined in the current module &#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:get-function-names</span>
      <span class="parenthesis">(</span>
      <span class="variable">$module</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string*</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$function</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$module</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="op">return</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="step">/</span>
      <span class="qname">xq:body</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="function">fn:normalize-space</span>
      <span class="parenthesis">(</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$function</span>
      <span class="step">/</span>
      <span class="qname">xq:name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
    </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Construct the HTML that will contain the XQuery code for the function&#xD;
 :  in the current module (or the entire module).  The code will be &#xD;
 :  presented via a Javascript popup Window from the module.  The lack&#xD;
 :  of a $name parameter indicates  to construct the HTML for entire module.&#xD;
 :  &#xD;
 :&#xD;
 :  @param $module the uri associated with the current module&#xD;
 :  @param $name the name associated with the current function contained in the module&#xD;
 :  @param $local indicates whether to build static HTML link for offline&#xD;
 :                viewing or dynamic links for real-time viewing.&#xD;
 :  @return HTML ... the XQuery code for the function&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:get-code-html</span>
      <span class="parenthesis">(</span>
      <span class="variable">$module</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="quantifier">?</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="variable">$local</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:boolean</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="es">&lt;</span>
      <span class="en">html</span>
      <span class="atn"> xml:space</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">preserve</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
    </span>
      <span class="es">&lt;</span>
      <span class="en">head</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
      </span>
      <span class="es">&lt;</span>
      <span class="en">title</span>
      <span class="z">&gt;</span>
      <span class="txt">xqDoc -- Code Sample</span>
      <span class="sc">&lt;/</span>
      <span class="cl">title</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
    </span>
      <span class="sc">&lt;/</span>
      <span class="cl">head</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
    </span>
      <span class="es">&lt;</span>
      <span class="en">body</span>
      <span class="atn"> xml:space</span>
      <span class="atneq">=</span>
      <span class="z">"</span>
      <span class="av">preserve</span>
      <span class="z">"</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
    </span>
      <span class="es">&lt;</span>
      <span class="en">pre</span>
      <span class="z">&gt;</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:empty</span>
      <span class="parenthesis">(</span>
      <span class="variable">$name</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$body</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$module</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:module</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="op">return</span>
      <span class="whitespace">    &#xD;
            </span>
      <span class="if">if</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="function">fn:exists</span>
      <span class="parenthesis">(</span>
      <span class="variable">$body</span>
      <span class="step">/</span>
      <span class="qname">*:body</span>
      <span class="filter">[</span>
      <span class="axis">@</span>
      <span class="qname">xml:space</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">then</span>
      <span class="whitespace">&#xD;
              </span>
      <span class="function">display:print-preserve-newlines</span>
      <span class="parenthesis">(</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$body</span>
      <span class="step">/</span>
      <span class="qname">*:body</span>
      <span class="filter">[</span>
      <span class="axis">@</span>
      <span class="qname">xml:space</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> &#xD;
            </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
              </span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
      </span>
      <span class="op">else</span>
      <span class="whitespace">&#xD;
        </span>
      <span class="higher">let</span>
      <span class="whitespace"> </span>
      <span class="variable">$body</span>
      <span class="whitespace"> </span>
      <span class="op">:=</span>
      <span class="whitespace"> </span>
      <span class="function">fn:collection</span>
      <span class="parenthesis">(</span>
      <span class="variable">$display:XQDOC_COLLECTION</span>
      <span class="parenthesis">)</span>
      <span class="step">/</span>
      <span class="qname">xq:xqdoc</span>
      <span class="filter">[</span>
      <span class="qname">xq:module</span>
      <span class="step">/</span>
      <span class="qname">xq:uri</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$module</span>
      <span class="filter">]</span>
      <span class="step">/</span>
      <span class="qname">xq:functions</span>
      <span class="step">/</span>
      <span class="qname">xq:function</span>
      <span class="filter">[</span>
      <span class="qname">xq:name</span>
      <span class="whitespace"> </span>
      <span class="op">=</span>
      <span class="whitespace"> </span>
      <span class="variable">$name</span>
      <span class="filter">]</span>
      <span class="whitespace">   &#xD;
        </span>
      <span class="op">return</span>
      <span class="whitespace">      &#xD;
          </span>
      <span class="function">display:print-preserve-newlines</span>
      <span class="parenthesis">(</span>
      <span class="function">xs:string</span>
      <span class="parenthesis">(</span>
      <span class="variable">$body</span>
      <span class="step">/</span>
      <span class="qname">*:body</span>
      <span class="filter">[</span>
      <span class="axis">@</span>
      <span class="qname">xml:space</span>
      <span class="filter">]</span>
      <span class="parenthesis">)</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> &#xD;
    </span>
      <span class="op">}</span>
      <span class="txt">&#xD;
    </span>
      <span class="sc">&lt;/</span>
      <span class="cl">pre</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
    </span>
      <span class="sc">&lt;/</span>
      <span class="cl">body</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
  </span>
      <span class="sc">&lt;/</span>
      <span class="cl">html</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">   &#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Modify the markup (i.e. newlines) associated with an XQuery function so that &#xD;
 :  it presents cleanly in HTML. &#xD;
 :&#xD;
 :  @param $strin the code associated with an XQuery function&#xD;
 :  @return the presentation friendly version of the code &#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:print-preserve-newlines</span>
      <span class="parenthesis">(</span>
      <span class="variable">$strin</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type-name">xs:string</span>
      <span class="quantifier">?</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="type">item</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="quantifier">*</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
  </span>
      <span class="higher">for</span>
      <span class="whitespace"> </span>
      <span class="variable">$i</span>
      <span class="whitespace"> </span>
      <span class="op">in</span>
      <span class="whitespace"> </span>
      <span class="function">fn:tokenize</span>
      <span class="parenthesis">(</span>
      <span class="variable">$strin</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="op">"</span>
      <span class="literal">\n</span>
      <span class="op">"</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace"> &#xD;
  </span>
      <span class="op">return</span>
      <span class="whitespace"> </span>
      <span class="parenthesis">(</span>
      <span class="variable">$i</span>
      <span class="op">,</span>
      <span class="whitespace"> </span>
      <span class="es">&lt;</span>
      <span class="en">br</span>
      <span class="z">/&gt;</span>
      <span class="open"/>
      <span class="parenthesis">)</span>
      <span class="whitespace"> &#xD;
&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
</span>
      <span class="comment">(:~&#xD;
 :  Get the xqDoc presentation stylesheet.  This is embedded into&#xD;
 :  the returned XHTML for all of the presentation pages.  It is&#xD;
 :  embedded into pages (instead of referencing a link) to keep &#xD;
 :  things simple for the off-line viewing mode.&#xD;
 :&#xD;
 :  @return the stylesheet&#xD;
 :)</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="whitespace">declare function</span>
      <span class="whitespace"> </span>
      <span class="function">display:get-stylesheet</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace"> </span>
      <span class="op">as</span>
      <span class="whitespace"> </span>
      <span class="node-type">element</span>
      <span class="parenthesis">(</span>
      <span class="parenthesis">)</span>
      <span class="whitespace">&#xD;
</span>
      <span class="op">{</span>
      <span class="whitespace">&#xD;
</span>
      <span class="es">&lt;</span>
      <span class="en">style</span>
      <span class="z">&gt;</span>
      <span class="txt">&#xD;
</span>
      <span class="z">&lt;!--</span>
      <span class="cm">&#xD;
body		{&#xD;
		font: 80% Verdana;&#xD;
		}&#xD;
table		{&#xD;
		font-size: 100%;&#xD;
		}&#xD;
h1, h2, h3, h4, h5, h6&#xD;
		{&#xD;
		clear: both;&#xD;
		float: none;&#xD;
		}&#xD;
h1		{&#xD;
		font-size: 100%;&#xD;
		margin: 0em;&#xD;
		}&#xD;
h2		{&#xD;
		font-size: 180%;&#xD;
		margin-bottom: -1em;&#xD;
		margin-top: .3em;&#xD;
		}&#xD;
h3		{&#xD;
		font-size: 150%;&#xD;
		}	&#xD;
h4		{&#xD;
		font-size: 140%;&#xD;
		background-color: #ccf;&#xD;
		border-bottom: 1px solid #99f;&#xD;
		width: 100%;&#xD;
		}&#xD;
h5		{&#xD;
		margin: 1em 0em 0em 0em;&#xD;
		font-size: 120%;&#xD;
		}&#xD;
h6		{&#xD;
		margin: 0em 0em 0em 3em;&#xD;
		font-style: italic;&#xD;
		font: bold italic;&#xD;
		font-size: 100%;&#xD;
		}&#xD;
#variables, #methods, #methoddetail&#xD;
		{&#xD;
		padding-left: 3em;&#xD;
		margin-bottom: 1.4em;&#xD;
		clear: both;&#xD;
		float: none;&#xD;
		}&#xD;
#methods ul.method, #variables ul.method&#xD;
		{&#xD;
		margin: 1em 0em 0em;&#xD;
		}&#xD;
#methoddetail ul.method&#xD;
		{&#xD;
		margin: 0em;&#xD;
		}&#xD;
div.inexternal&#xD;
		{&#xD;
		padding-left: 2em;&#xD;
		margin-bottom: 1em;&#xD;
		}&#xD;
div.methoddetail p&#xD;
		{&#xD;
		float: none;&#xD;
		clear: both;&#xD;
		padding-left: 2em;&#xD;
		margin-bottom: 1em;&#xD;
		}&#xD;
div.methoddetail{&#xD;
		padding-bottom: 1em;&#xD;
		}&#xD;
div.methoddetail li&#xD;
		{&#xD;
		list-style-type: none;&#xD;
		font-weight: bold;&#xD;
		}&#xD;
div.methoddetail li li&#xD;
		{&#xD;
		list-style-type: circle;&#xD;
		font-weight: normal;&#xD;
		}&#xD;
div.methoddetail li ul&#xD;
		{&#xD;
		padding-bottom: 0.5em;&#xD;
		font-weight: normal;&#xD;
		}&#xD;
table.inexternal{&#xD;
		clear: both;&#xD;
		float: none;&#xD;
		width: 80%;&#xD;
		margin-left: 3em;&#xD;
		padding: 0em;&#xD;
		&#xD;
		}&#xD;
table.inexternal th&#xD;
		{&#xD;
		background-color:#dedede;&#xD;
		width: 50%;&#xD;
		}			&#xD;
td		{&#xD;
		vertical-align: top;&#xD;
		}&#xD;
div.description {&#xD;
		margin-top: .5em;&#xD;
		font-weight: normal;&#xD;
		padding-left: 1em;&#xD;
		}&#xD;
ul.method	{&#xD;
		clear: both;&#xD;
		float: none;&#xD;
		width: 90%;&#xD;
		list-style-type: none;&#xD;
		border-top: 1px solid #ccc;&#xD;
		}&#xD;
ul.method li.left&#xD;
		{&#xD;
		float: left;&#xD;
		clear: none;&#xD;
		width: 40%;&#xD;
		font-weight: bold;&#xD;
		margin-bottom: 2em;&#xD;
		}&#xD;
ul.method li.right&#xD;
		{&#xD;
		position: relative;&#xD;
            top: 0em;&#xD;
		float: left;&#xD;
            width: 55%;&#xD;
		margin-bottom: 2em;&#xD;
		padding-left: 2em;&#xD;
		}&#xD;
div.home 	{&#xD;
		width: 60%;&#xD;
		float: left;&#xD;
		margin-right: 1%;&#xD;
		border: 1px&#xD;
		}&#xD;
div.home h4	{&#xD;
		font-size: 120%;&#xD;
		background-color: #fff;&#xD;
		border-bottom: 1px solid #99f;&#xD;
		width: 100%;&#xD;
		margin-bottom: -1em;&#xD;
		}&#xD;
div.overview p {&#xD;
               width: 60%;&#xD;
               }&#xD;
     &#xD;
 </span>
      <span class="z">--&gt;</span>
      <span class="txt">&#xD;
</span>
      <span class="sc">&lt;/</span>
      <span class="cl">style</span>
      <span class="z">&gt;</span>
      <span class="open"/>
      <span class="whitespace">&#xD;
</span>
      <span class="op">}</span>
      <span class="op">;</span>
      <span class="whitespace">&#xD;
&#xD;
&#xD;
</span>
      <span class="comment">(: Stylus Studio meta-information - (c) 2004-2006. Progress Software Corporation. All rights reserved.&#xD;
&lt;metaInformation&gt;&#xD;
&lt;scenarios/&gt;&lt;MapperMetaTag&gt;&lt;MapperInfo srcSchemaPathIsRelative="yes" srcSchemaInterpretAsXML="no" destSchemaPath="" destSchemaRoot="" destSchemaPathIsRelative="yes" destSchemaInterpretAsXML="no"/&gt;&lt;MapperBlockPosition&gt;&lt;/MapperBlockPosition&gt;&lt;TemplateContext&gt;&lt;/TemplateContext&gt;&lt;MapperFilter side="source"&gt;&lt;/MapperFilter&gt;&lt;/MapperMetaTag&gt;&#xD;
&lt;/metaInformation&gt;&#xD;
:)</span>
   </pre>
</xquery-tokens>
